{"ast":null,"code":"var _jsxFileName = \"/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/services/popUp-service.tsx\";\nimport SignIn from \"../we-shop/sign-in/sign-in\";\nimport React from \"react\";\nconst PopUpService = {\n  openPopup(tabName) {\n    switch (tabName) {\n      case \"My Acount\":\n        {\n          break;\n        }\n\n      case \"Products\":\n        {\n          break;\n        }\n\n      case \"Today's Deals\":\n        {\n          break;\n        }\n\n      case \"Help\":\n        {\n          break;\n        }\n\n      case \"Register\":\n        {\n          return /*#__PURE__*/React.createElement(SignIn, {\n            newUser: true,\n            onRegister: tab => this.openPopup(tab) // inputs={[\"email\", \"password\", \"confirmPassword\"].map(\n            //   (input: string) => usableInputs[input]\n            // )}\n            ,\n            secunedFuncVar: \"Connect\",\n            secunedFunc: tab => this.openPopup(tab),\n            text: \"Connect\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 11\n            }\n          });\n          break;\n        }\n\n      case \"Connect\":\n        {\n          return /*#__PURE__*/React.createElement(SignIn, {\n            newUser: true,\n            onRegister: tab => this.openPopup(tab) // inputs={[\"email\", \"password\"].map((input) => usableInputs[input])}\n            // secunedFunc={(tab: string) => this.openPopup(tab)}\n            ,\n            secunedFuncVar: \"Register\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }\n          });\n        }\n\n      default:\n        {\n          console.log(\"Register\");\n          break;\n        }\n    }\n  } //   case \"Register\": {\n  //     return\n  //       <SignIn\n  //         newUser={true}\n  //         onRegister={(tab: string) => openPopup(tab)}\n  //         inputs={[\"email\", \"password\", \"confirmPassword\"].map(\n  //           (input: string) => usableInputs[input]\n  //         )}\n  //         secunedFuncVar=\"Connect\"\n  //         secunedFunc={(tab: string) => openPopup(tab)}\n  //         text={\"Connect\"}\n  //       ></SignIn>\n  //     break;\n  //   case \"Connect\": {\n  //     return\n  //       <SignIn\n  //         newUser={true}\n  //         onClose={closePopup}\n  //         onRegister={(tab: string) => openPopup(tab)}\n  //         inputs={[\"email\", \"password\"].map((input) => usableInputs[input])}\n  //         secunedFunc={(tab: string) => openPopup(tab)}\n  //         secunedFuncVar=\"Register\"\n  //       ></SignIn>\n  //     );\n  //     break;\n  //   }\n  // const closePopup = () => {\n  //   setShowPopup(false);\n  //   setPopup({});\n  // };\n\n\n}; // export const usableInputs: any = {\n//   email: {\n//     name: \"email\",\n//     type: \"email\",\n//     placeholder: \"Email\",\n//     validateFunc: Yup.string().email().required(\"Required\"),\n//   },\n//   password: {\n//     name: \"password\",\n//     type: \"password\",\n//     placeholder: \"Password\",\n//     validateFunc: Yup.string()\n//       .required(\"No password provided.\")\n//       .min(8, \"Password is too short - should be 8 chars minimum.\")\n//       .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n//   },\n//   confirmPassword: {\n//     name: \"confirmPassword\",\n//     type: \"password\",\n//     placeholder: \"confirm Password\",\n//     validateFunc: Yup.string()\n//       .required(\"No password provided.\")\n//       .min(8, \"Password is too short - should be 8 chars minimum.\")\n//       .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//       .test(\"passwords-match\", \"Passwords must match\", function (value) {\n//         return this.parent.password === value;\n//       }),\n//   },\n// };\n\nexport default PopUpService;","map":{"version":3,"sources":["/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/services/popUp-service.tsx"],"names":["SignIn","React","PopUpService","openPopup","tabName","tab","console","log"],"mappings":";AACA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,CAACC,OAAD,EAAkB;AACzB,YAAQA,OAAR;AACE,WAAK,WAAL;AAAkB;AAChB;AACD;;AACD,WAAK,UAAL;AAAiB;AACf;AACD;;AACD,WAAK,eAAL;AAAsB;AACpB;AACD;;AACD,WAAK,MAAL;AAAa;AACX;AACD;;AACD,WAAK,UAAL;AAAiB;AACf,8BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAE,IADX;AAEE,YAAA,UAAU,EAAGC,GAAD,IAAiB,KAAKF,SAAL,CAAeE,GAAf,CAF/B,CAGE;AACA;AACA;AALF;AAME,YAAA,cAAc,EAAC,SANjB;AAOE,YAAA,WAAW,EAAGA,GAAD,IAAiB,KAAKF,SAAL,CAAeE,GAAf,CAPhC;AAQE,YAAA,IAAI,EAAE,SARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYA;AACD;;AACD,WAAK,SAAL;AAAgB;AACd,8BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAE,IADX;AAEE,YAAA,UAAU,EAAGA,GAAD,IAAiB,KAAKF,SAAL,CAAeE,GAAf,CAF/B,CAGE;AACA;AAJF;AAKE,YAAA,cAAc,EAAC,UALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACD;AAAS;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA;AACD;AA1CH;AA4CD,GA9CkB,CA+CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA9EmB,CAArB,C,CAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeL,YAAf","sourcesContent":["import * as Yup from \"yup\";\nimport SignIn from \"../we-shop/sign-in/sign-in\";\nimport React, { Component } from \"react\";\n\nconst PopUpService = {\n  openPopup(tabName: string) {\n    switch (tabName) {\n      case \"My Acount\": {\n        break;\n      }\n      case \"Products\": {\n        break;\n      }\n      case \"Today's Deals\": {\n        break;\n      }\n      case \"Help\": {\n        break;\n      }\n      case \"Register\": {\n        return (\n          <SignIn\n            newUser={true}\n            onRegister={(tab: string) => this.openPopup(tab)}\n            // inputs={[\"email\", \"password\", \"confirmPassword\"].map(\n            //   (input: string) => usableInputs[input]\n            // )}\n            secunedFuncVar=\"Connect\"\n            secunedFunc={(tab: string) => this.openPopup(tab)}\n            text={\"Connect\"}\n          ></SignIn>\n        );\n        break;\n      }\n      case \"Connect\": {\n        return (\n          <SignIn\n            newUser={true}\n            onRegister={(tab: string) => this.openPopup(tab)}\n            // inputs={[\"email\", \"password\"].map((input) => usableInputs[input])}\n            // secunedFunc={(tab: string) => this.openPopup(tab)}\n            secunedFuncVar=\"Register\"\n          ></SignIn>\n        );\n      }\n      default: {\n        console.log(\"Register\");\n        break;\n      }\n    }\n  },\n  //   case \"Register\": {\n  //     return\n  //       <SignIn\n  //         newUser={true}\n  //         onRegister={(tab: string) => openPopup(tab)}\n  //         inputs={[\"email\", \"password\", \"confirmPassword\"].map(\n  //           (input: string) => usableInputs[input]\n  //         )}\n  //         secunedFuncVar=\"Connect\"\n  //         secunedFunc={(tab: string) => openPopup(tab)}\n  //         text={\"Connect\"}\n  //       ></SignIn>\n  //     break;\n\n  //   case \"Connect\": {\n  //     return\n  //       <SignIn\n  //         newUser={true}\n  //         onClose={closePopup}\n  //         onRegister={(tab: string) => openPopup(tab)}\n  //         inputs={[\"email\", \"password\"].map((input) => usableInputs[input])}\n  //         secunedFunc={(tab: string) => openPopup(tab)}\n  //         secunedFuncVar=\"Register\"\n  //       ></SignIn>\n  //     );\n  //     break;\n  //   }\n\n  // const closePopup = () => {\n  //   setShowPopup(false);\n  //   setPopup({});\n  // };\n};\n// export const usableInputs: any = {\n//   email: {\n//     name: \"email\",\n//     type: \"email\",\n//     placeholder: \"Email\",\n//     validateFunc: Yup.string().email().required(\"Required\"),\n//   },\n//   password: {\n//     name: \"password\",\n//     type: \"password\",\n//     placeholder: \"Password\",\n//     validateFunc: Yup.string()\n//       .required(\"No password provided.\")\n//       .min(8, \"Password is too short - should be 8 chars minimum.\")\n//       .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n//   },\n//   confirmPassword: {\n//     name: \"confirmPassword\",\n//     type: \"password\",\n//     placeholder: \"confirm Password\",\n//     validateFunc: Yup.string()\n//       .required(\"No password provided.\")\n//       .min(8, \"Password is too short - should be 8 chars minimum.\")\n//       .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n//       .test(\"passwords-match\", \"Passwords must match\", function (value) {\n//         return this.parent.password === value;\n//       }),\n//   },\n// };\nexport default PopUpService;\n"]},"metadata":{},"sourceType":"module"}