{"ast":null,"code":"var _jsxFileName = \"/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.tsx\";\nimport InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./sign-in.scss\";\nimport React from \"react\";\nimport { closePopUpAction } from \"../../reducer/actions\";\nimport { useDispatch } from \"react-redux\"; // const dispatch = useDispatch();\n\nexport const SignIn = prop => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: prop.inputs.reduce((obj, input) => {\n    obj[input.name] = \"\";\n    return obj;\n  }, {}),\n  validationSchema: Yup.object().shape(prop.inputs.reduce((obj, input) => {\n    obj[input.name] = input.validateFunc;\n    return obj;\n  }, {})),\n  onSubmit: async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    alert(JSON.stringify(values, null, 2));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props; // function inputEmail() {\n  //   return (\n  //     <div className=\"input-container\">\n  //       <InputText\n  //         className={errors.password && touched.password && \"error\"}\n  //         name={\"email\"}\n  //         valid={!errors.email && touched.email}\n  //         placeholder={\"Email\"}\n  //         type={\"email\"}\n  //         value={values.email}\n  //         id={\"username\"}\n  //         onChange={handleChange}\n  //         handleBlur={handleBlur}\n  //       ></InputText>\n  //       {errors.email && touched.email && (\n  //         <div className=\"input-feedback\">{errors.email}</div>\n  //       )}\n  //     </div>\n  //   );\n  // }\n\n  function input(inputVals) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      className: errors[inputVals.name] && touched[inputVals.name] && \"error\",\n      name: inputVals.name,\n      valid: !errors[inputVals.name] && touched[inputVals.name],\n      placeholder: inputVals.placeholder,\n      textVissible: false,\n      type: inputVals.type,\n      value: values[inputVals.name],\n      onChange: handleChange,\n      id: inputVals.name,\n      handleBlur: handleBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), errors[inputVals.name] && touched[inputVals.name] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, errors[inputVals.name]));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fields-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, prop.inputs.map(inputVals => input(inputVals))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WeShopButton, {\n    type: \"submit\",\n    disable: isSubmitting // onClick={handleSubmit}\n    ,\n    text: values.newUser ? \"Register\" : \"Connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(WeShopButton, {\n    seconderyButton: true,\n    onClick: e => useDispatch()(closePopUpAction()),\n    text: \"cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }))), prop.text !== \"\" && prop.text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-user-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WeShopButton, {\n    className: errors.password && touched.password && \"error\",\n    text: prop.text,\n    onClick: e => (values.newUser = !values.newUser) && prop.secunedFunc(prop.secunedFuncVar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }))));\n}); //}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.tsx"],"names":["InputText","WeShopButton","Formik","Yup","React","closePopUpAction","useDispatch","SignIn","prop","inputs","reduce","obj","input","name","object","shape","validateFunc","values","Promise","resolve","setTimeout","alert","JSON","stringify","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","inputVals","placeholder","type","map","newUser","e","text","password","secunedFunc","secunedFuncVar"],"mappings":"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","sourcesContent":["import InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport ConnectService from \"../../services/connect-service\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./sign-in.scss\";\nimport React from \"react\";\nimport { openPopUpAction, closePopUpAction } from \"../../reducer/actions\";\nimport { useDispatch } from \"react-redux\";\n// const dispatch = useDispatch();\nexport const SignIn = (prop: any) => (\n  <Formik\n    initialValues={prop.inputs.reduce(\n      (obj: { [x: string]: string }, input: { name: React.ReactText }) => {\n        obj[input.name] = \"\";\n        return obj;\n      },\n      {}\n    )}\n    validationSchema={Yup.object().shape(\n      prop.inputs.reduce(\n        (\n          obj: { [x: string]: any },\n          input: { name: React.ReactText; validateFunc: any }\n        ) => {\n          obj[input.name] = input.validateFunc;\n          return obj;\n        },\n        {}\n      )\n    )}\n    onSubmit={async (values) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    }}\n  >\n    {(props) => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n      // function inputEmail() {\n      //   return (\n      //     <div className=\"input-container\">\n      //       <InputText\n      //         className={errors.password && touched.password && \"error\"}\n      //         name={\"email\"}\n      //         valid={!errors.email && touched.email}\n      //         placeholder={\"Email\"}\n      //         type={\"email\"}\n      //         value={values.email}\n      //         id={\"username\"}\n      //         onChange={handleChange}\n      //         handleBlur={handleBlur}\n      //       ></InputText>\n      //       {errors.email && touched.email && (\n      //         <div className=\"input-feedback\">{errors.email}</div>\n      //       )}\n      //     </div>\n      //   );\n      // }\n      function input(inputVals: {\n        name: React.ReactText;\n        placeholder: any;\n        type: any;\n      }) {\n        return (\n          <div className=\"input-container\">\n            <InputText\n              className={\n                errors[inputVals.name] && touched[inputVals.name] && \"error\"\n              }\n              name={inputVals.name}\n              valid={!errors[inputVals.name] && touched[inputVals.name]}\n              placeholder={inputVals.placeholder}\n              textVissible={false}\n              type={inputVals.type}\n              value={values[inputVals.name]}\n              onChange={handleChange}\n              id={inputVals.name}\n              handleBlur={handleBlur}\n            ></InputText>\n            {errors[inputVals.name] && touched[inputVals.name] && (\n              <div className=\"input-feedback\">{errors[inputVals.name]}</div>\n            )}\n          </div>\n        );\n      }\n      return (\n        <form onSubmit={handleSubmit}>\n          <div className=\"sign-in-container\">\n            <div className=\"input-container\">\n              <div className=\"input-fields-container\">\n                {prop.inputs.map((inputVals: any) => input(inputVals))}\n              </div>\n              <div className=\"buttons\">\n                <WeShopButton\n                  type=\"submit\"\n                  disable={isSubmitting}\n                  // onClick={handleSubmit}\n                  text={values.newUser ? \"Register\" : \"Connect\"}\n                ></WeShopButton>\n                <WeShopButton\n                  seconderyButton={true}\n                  onClick={(e: any) => useDispatch()(closePopUpAction())}\n                  text={\"cancel\"}\n                ></WeShopButton>\n              </div>\n            </div>\n\n            {prop.text !== \"\" && prop.text && (\n              <div className=\"new-user-container\">\n                <WeShopButton\n                  className={errors.password && touched.password && \"error\"}\n                  text={prop.text}\n                  onClick={(e: any) =>\n                    (values.newUser = !values.newUser) &&\n                    prop.secunedFunc(prop.secunedFuncVar)\n                  }\n                ></WeShopButton>\n              </div>\n            )}\n          </div>\n        </form>\n      );\n    }}\n  </Formik>\n);\n//}\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}