{"ast":null,"code":"var _jsxFileName = \"/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.js\";\nimport React, { useState } from \"react\";\nimport InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport ConnectService from \"../../services/connect-service\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./sign-in.scss\";\n\nconst SignIn = () => //const [email, setEmail] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n// const [confirmPassword, setConfirmPassword] = useState(\"\");\n// const [newUser, setNewUSer] = useState(\"\");\n// const [validMail, setValidMail] = useState(false);\n// const [validPassword, setValidPassword] = useState(false);\n// const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n// function onConfirm() {\n//   if (newUser) {\n//     ConnectService.register({\n//       email: email,\n//       password: password\n//     });\n//   } else {\n//     ConnectService.connect({\n//       email: email,\n//       password: password\n//     });\n//   }\n//   props.onClose();\n// }\n// function onCanncel() {\n//   props.onClose();\n// }\n// return (\nReact.createElement(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    newUser: false\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      console.log(\"Logging in\", values);\n      setSubmitting(false);\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n    confirmPassword: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        isSubmitting = props.isSubmitting,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n\n  function inputEmail() {\n    return React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      className: errors.password && touched.password && \"error\",\n      name: \"email\",\n      valid: !errors.email && touched.email,\n      placeholder: \"Email\",\n      type: \"email\",\n      value: values.email,\n      id: \"username\",\n      onChange: handleChange,\n      handleBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, errors.email));\n  }\n\n  function inputPassword() {\n    return React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      className: errors.password && touched.password && \"error\",\n      name: \"password\",\n      valid: !errors.password && touched.password,\n      placeholder: \"Password\",\n      textVissible: false,\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      id: \"password\",\n      handleBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, errors.password));\n  }\n\n  function inputConfirmPassword() {\n    if (values.newUser) {\n      return React.createElement(InputText, {\n        className: errors.password && touched.password && \"error\",\n        name: \"confirmPassword\" // valid={validConfirmPassword}\n        ,\n        placeholder: \"Confirm Password\",\n        textVissible: false,\n        type: \"password\",\n        value: values.confirmPassword,\n        onChange: handleChange,\n        handleBlur: handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sign-in-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-fields-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, inputEmail(), \" \", inputPassword(), \" \", inputConfirmPassword()), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(WeShopButton, {\n    type: \"submit\",\n    disable: isSubmitting,\n    onClick: handleSubmit,\n    text: values.newUser ? \"Register\" : \"Connect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(WeShopButton, {\n    seconderyButton: true // onClick={e => onCanncel()}\n    ,\n    text: \"cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"new-user-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(WeShopButton, {\n    className: errors.password && touched.password && \"error\",\n    onClick: e => values.newUser = !values.newUser,\n    text: values.newUser ? \"I already have an acount\" : \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))));\n}); //}\n\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.js"],"names":["React","useState","InputText","WeShopButton","ConnectService","Formik","Yup","SignIn","email","password","confirmPassword","newUser","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","inputEmail","inputPassword","inputConfirmPassword","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport ConnectService from \"../../services/connect-service\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport \"./sign-in.scss\";\nconst SignIn = () => (\n  //const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [newUser, setNewUSer] = useState(\"\");\n  // const [validMail, setValidMail] = useState(false);\n  // const [validPassword, setValidPassword] = useState(false);\n  // const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n\n  // function onConfirm() {\n  //   if (newUser) {\n  //     ConnectService.register({\n  //       email: email,\n  //       password: password\n  //     });\n  //   } else {\n  //     ConnectService.connect({\n  //       email: email,\n  //       password: password\n  //     });\n  //   }\n  //   props.onClose();\n  // }\n  // function onCanncel() {\n  //   props.onClose();\n  // }\n\n  // return (\n  <Formik\n    initialValues={{\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      newUser: false\n    }}\n    onSubmit={(values, { setSubmitting }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    }}\n    validationSchema={Yup.object().shape({\n      email: Yup.string()\n        .email()\n        .required(\"Required\"),\n      password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n      confirmPassword: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    })}\n  >\n    {props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      function inputEmail() {\n        return (\n          <div className=\"input-container\">\n            <InputText\n              className={errors.password && touched.password && \"error\"}\n              name={\"email\"}\n              valid={!errors.email && touched.email}\n              placeholder={\"Email\"}\n              type={\"email\"}\n              value={values.email}\n              id={\"username\"}\n              onChange={handleChange}\n              handleBlur={handleBlur}\n            ></InputText>\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n          </div>\n        );\n      }\n      function inputPassword() {\n        return (\n          <div className=\"input-container\">\n            <InputText\n              className={errors.password && touched.password && \"error\"}\n              name={\"password\"}\n              valid={!errors.password && touched.password}\n              placeholder={\"Password\"}\n              textVissible={false}\n              type={\"password\"}\n              value={values.password}\n              onChange={handleChange}\n              id=\"password\"\n              handleBlur={handleBlur}\n            ></InputText>\n            {errors.password && touched.password && (\n              <div className=\"input-feedback\">{errors.password}</div>\n            )}\n          </div>\n        );\n      }\n      function inputConfirmPassword() {\n        if (values.newUser) {\n          return (\n            <InputText\n              className={errors.password && touched.password && \"error\"}\n              name={\"confirmPassword\"}\n              // valid={validConfirmPassword}\n              placeholder={\"Confirm Password\"}\n              textVissible={false}\n              type={\"password\"}\n              value={values.confirmPassword}\n              onChange={handleChange}\n              handleBlur={handleBlur}\n            ></InputText>\n          );\n        }\n      }\n      return (\n        <form onSubmit={handleSubmit}>\n          <div className=\"sign-in-container\">\n            <div className=\"input-container\">\n              <div className=\"input-fields-container\">\n                {inputEmail()} {inputPassword()} {inputConfirmPassword()}\n              </div>\n              <div className=\"buttons\">\n                <WeShopButton\n                  type={\"submit\"}\n                  disable={isSubmitting}\n                  onClick={handleSubmit}\n                  text={values.newUser ? \"Register\" : \"Connect\"}\n                ></WeShopButton>\n                <WeShopButton\n                  seconderyButton={true}\n                  // onClick={e => onCanncel()}\n                  text={\"cancel\"}\n                ></WeShopButton>\n              </div>\n            </div>\n            <div className=\"new-user-container\">\n              <WeShopButton\n                className={errors.password && touched.password && \"error\"}\n                onClick={e => (values.newUser = !values.newUser)}\n                text={values.newUser ? \"I already have an acount\" : \"register\"}\n              ></WeShopButton>\n            </div>\n          </div>\n        </form>\n      );\n    }}\n  </Formik>\n);\n//}\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}