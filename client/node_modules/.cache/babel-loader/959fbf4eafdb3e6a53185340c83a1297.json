{"ast":null,"code":"import _slicedToArray from \"/Users/davidwiener/Documents/react-projeckts/we-shop/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.js\";\nimport React, { useState } from \"react\";\nimport InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport ConnectService from \"../../services/connect-service\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./sign-in.scss\";\n\nfunction SignIn(props) {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        newUser = _useState2[0],\n        setNewUSer = _useState2[1]; // const [validMail, setValidMail] = useState(false);\n  // const [validPassword, setValidPassword] = useState(false);\n  // const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n  // function onConfirm() {\n  //   if (newUser) {\n  //     ConnectService.register({\n  //       email: email,\n  //       password: password\n  //     });\n  //   } else {\n  //     ConnectService.connect({\n  //       email: email,\n  //       password: password\n  //     });\n  //   }\n  //   props.onClose();\n  // }\n\n\n  function onCanncel() {\n    props.onClose();\n  }\n\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n      confirmPassword: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"}\", props => {\n    const values = props.values,\n          touched = props.touched,\n          errors = props.errors,\n          isSubmitting = props.isSubmitting,\n          handleChange = props.handleChange,\n          handleBlur = props.handleBlur,\n          handleSubmit = props.handleSubmit;\n\n    function inputEmail() {\n      return React.createElement(InputText, {\n        className: errors.password && touched.password && \"error\",\n        name: \"email\" // valid={validMail}\n        ,\n        placeholder: \"Email\",\n        type: \"email\",\n        value: values.email,\n        id: \"username\",\n        setValue: handleChange,\n        onfocusout: handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n\n    function inputPassword() {\n      return React.createElement(InputText, {\n        className: errors.password && touched.password && \"error\",\n        name: \"password\" // valid={validPassword}\n        ,\n        placeholder: \"Password\",\n        textVissible: false,\n        type: \"password\",\n        value: values.password,\n        setValue: handleChange,\n        id: \"password\",\n        onfocusout: handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n\n    function inputConfirmPassword() {\n      if (newUser) {\n        return React.createElement(InputText, {\n          className: errors.password && touched.password && \"error\",\n          name: \"confirmPassword\" // valid={validConfirmPassword}\n          ,\n          placeholder: \"Confirm Password\",\n          textVissible: false,\n          type: \"password\",\n          value: values.confirmPassword,\n          setValue: handleChange,\n          onfocusout: handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sign-in-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-fields-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, inputEmail(), \" \", inputPassword(), \" \", inputConfirmPassword()), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(WeShopButton, {\n      type: \"submit\",\n      disable: isSubmitting,\n      onClick: onConfirm(),\n      text: newUser ? \"Register\" : \"Connect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(WeShopButton, {\n      seconderyButton: true,\n      onClick: e => onCanncel(),\n      text: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"new-user-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(WeShopButton, {\n      className: errors.password && touched.password && \"error\",\n      onClick: e => setNewUSer(!newUser),\n      text: newUser ? \"I already have an acount\" : \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))));\n  });\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/sign-in/sign-in.js"],"names":["React","useState","InputText","WeShopButton","ConnectService","Formik","Yup","SignIn","props","newUser","setNewUSer","onCanncel","onClose","email","password","confirmPassword","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","inputEmail","inputPassword","inputConfirmPassword","onConfirm","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport InputText from \"../components/input-text/input-text\";\nimport WeShopButton from \"../components/we-shop-button/we-shop-button\";\nimport ConnectService from \"../../services/connect-service\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport \"./sign-in.scss\";\nfunction SignIn(props) {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [newUser, setNewUSer] = useState(\"\");\n  // const [validMail, setValidMail] = useState(false);\n  // const [validPassword, setValidPassword] = useState(false);\n  // const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n\n  // function onConfirm() {\n  //   if (newUser) {\n  //     ConnectService.register({\n  //       email: email,\n  //       password: password\n  //     });\n  //   } else {\n  //     ConnectService.connect({\n  //       email: email,\n  //       password: password\n  //     });\n  //   }\n  //   props.onClose();\n  // }\n  function onCanncel() {\n    props.onClose();\n  }\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\"),\n        password: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n        confirmPassword: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      })}\n    >\n      }\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        function inputEmail() {\n          return (\n            <InputText\n              className={errors.password && touched.password && \"error\"}\n              name={\"email\"}\n              // valid={validMail}\n              placeholder={\"Email\"}\n              type={\"email\"}\n              value={values.email}\n              id={\"username\"}\n              setValue={handleChange}\n              onfocusout={handleBlur}\n            ></InputText>\n          );\n        }\n        function inputPassword() {\n          return (\n            <InputText\n              className={errors.password && touched.password && \"error\"}\n              name={\"password\"}\n              // valid={validPassword}\n              placeholder={\"Password\"}\n              textVissible={false}\n              type={\"password\"}\n              value={values.password}\n              setValue={handleChange}\n              id=\"password\"\n              onfocusout={handleBlur}\n            ></InputText>\n          );\n        }\n        function inputConfirmPassword() {\n          if (newUser) {\n            return (\n              <InputText\n                className={errors.password && touched.password && \"error\"}\n                name={\"confirmPassword\"}\n                // valid={validConfirmPassword}\n                placeholder={\"Confirm Password\"}\n                textVissible={false}\n                type={\"password\"}\n                value={values.confirmPassword}\n                setValue={handleChange}\n                onfocusout={handleBlur}\n              ></InputText>\n            );\n          }\n        }\n        return (\n          <form onSubmit={handleSubmit}>\n            <div className=\"sign-in-container\">\n              <div className=\"input-container\">\n                <div className=\"input-fields-container\">\n                  {inputEmail()} {inputPassword()} {inputConfirmPassword()}\n                </div>\n                <div className=\"buttons\">\n                  <WeShopButton\n                    type={\"submit\"}\n                    disable={isSubmitting}\n                    onClick={onConfirm()}\n                    text={newUser ? \"Register\" : \"Connect\"}\n                  ></WeShopButton>\n                  <WeShopButton\n                    seconderyButton={true}\n                    onClick={e => onCanncel()}\n                    text={\"cancel\"}\n                  ></WeShopButton>\n                </div>\n              </div>\n              <div className=\"new-user-container\">\n                <WeShopButton\n                  className={errors.password && touched.password && \"error\"}\n                  onClick={e => setNewUSer(!newUser)}\n                  text={newUser ? \"I already have an acount\" : \"register\"}\n                ></WeShopButton>\n              </div>\n            </div>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n}\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}