{"ast":null,"code":"import * as Yup from \"yup\";\nexport const usableInputs = {\n  email: {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    validateFunc: Yup.string().email().required(\"Required\")\n  },\n  password: {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    validateFunc: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n  },\n  confirmPassword: {\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"confirm Password\",\n    validateFunc: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\").test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.password === value;\n    })\n  }\n};","map":{"version":3,"sources":["/Users/davidwiener/Documents/react-projeckts/we-shop/client/src/we-shop/we-shop-inputs.config.ts"],"names":["Yup","usableInputs","email","name","type","placeholder","validateFunc","string","required","password","min","matches","confirmPassword","test","value","parent"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAO,MAAMC,YAAiB,GAAG;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,IAAI,EAAE,OAFD;AAGLC,IAAAA,WAAW,EAAE,OAHR;AAILC,IAAAA,YAAY,EAAEN,GAAG,CAACO,MAAJ,GAAaL,KAAb,GAAqBM,QAArB,CAA8B,UAA9B;AAJT,GADwB;AAO/BC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,IAAI,EAAE,UADE;AAERC,IAAAA,IAAI,EAAE,UAFE;AAGRC,IAAAA,WAAW,EAAE,UAHL;AAIRC,IAAAA,YAAY,EAAEN,GAAG,CAACO,MAAJ,GACXC,QADW,CACF,uBADE,EAEXE,GAFW,CAEP,CAFO,EAEJ,oDAFI,EAGXC,OAHW,CAGH,aAHG,EAGY,iCAHZ;AAJN,GAPqB;AAgB/BC,EAAAA,eAAe,EAAE;AACfT,IAAAA,IAAI,EAAE,iBADS;AAEfC,IAAAA,IAAI,EAAE,UAFS;AAGfC,IAAAA,WAAW,EAAE,kBAHE;AAIfC,IAAAA,YAAY,EAAEN,GAAG,CAACO,MAAJ,GACXC,QADW,CACF,uBADE,EAEXE,GAFW,CAEP,CAFO,EAEJ,oDAFI,EAGXC,OAHW,CAGH,aAHG,EAGY,iCAHZ,EAIXE,IAJW,CAIN,iBAJM,EAIa,sBAJb,EAIqC,UAAUC,KAAV,EAAiB;AAChE,aAAO,KAAKC,MAAL,CAAYN,QAAZ,KAAyBK,KAAhC;AACD,KANW;AAJC;AAhBc,CAA1B","sourcesContent":["import * as Yup from \"yup\";\nexport const usableInputs: any = {\n  email: {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    validateFunc: Yup.string().email().required(\"Required\"),\n  },\n  password: {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    validateFunc: Yup.string()\n      .required(\"No password provided.\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\")\n      .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n  },\n  confirmPassword: {\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"confirm Password\",\n    validateFunc: Yup.string()\n      .required(\"No password provided.\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\")\n      .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      .test(\"passwords-match\", \"Passwords must match\", function (value) {\n        return this.parent.password === value;\n      }),\n  },\n};\n"]},"metadata":{},"sourceType":"module"}